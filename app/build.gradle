apply plugin: 'com.android.application'

ext.appVersionName = "5.0"
ext.appVersionCode = 82
ext.appReleaseDir = "E:/temp/release/KHCareer"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "com.king.mytennis.view"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode appVersionCode
        versionName appVersionName
    }

    signingConfigs {
        debugConfig {
            storeFile file("../keystore/debug_myapp_key.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        releaseConfig {
            storeFile file("../keystore/myapp_key.keystore")
            storePassword "1010520"
            keyAlias "myapp"
            keyPassword "1010520"
        }
    }
    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            def newName = '';
            if (variant.buildType.name.equals('release')) {
                // APK输出文件名规则：aiyou-版本名-市场-release.apk
                // def releaseApkName = 'KHCareer-' + appVersionName + '-' + variant.productFlavors[0].name + '-release-' + getDate() + '.apk'
                def releaseApkName = 'KHCareer-' + appVersionName + '-release-' + getDate() + '.apk'
                // appReleaseDir对应local.properties里面定义的路径，再加上日期（格式：201503011230）文件夹
                output.outputFile = new File(appReleaseDir + '/' + getDay(), releaseApkName)
            }
            if (variant.buildType.name.equals('beta')) {
            }
            if (variant.buildType.name.equals('debug')) {

            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debugConfig
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        abortOnError false
    }

}

//获取时间戳
def getDay() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}
//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:support-v4:25.3.1'
    testCompile 'junit:junit:4.12'

    compile 'com.nineoldandroids:library:2.4.0'
    /*gson*/
    compile "com.google.code.gson:gson:${GSON_VERSION}"
    /*rxjava  rxbinding  sqlbrite*/
    compile "io.reactivex.rxjava2:rxjava:${RXJAVA_VERSION}"
    compile "io.reactivex.rxjava2:rxandroid:${RXANDROID_VERSION}"
    /*retrofit2*/
    compile "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${RETROFIT_VERSION}"
    compile "com.squareup.okhttp3:logging-interceptor:${OKHTTP_VERSION}"
    /*okhttp*/
    compile "com.squareup.okhttp3:okhttp:${OKHTTP_VERSION}"
    compile "com.squareup.okio:okio:${OKIO_VERSION}"
    /*logger*/
    compile "com.orhanobut:logger:${LOGGER_VERSION}"
    /*butterknife*/
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    /*glide*/
    compile 'com.github.bumptech.glide:glide:4.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'

    compile project(':libresmanager')
    compile project(':libtool')
    compile project(':prjcolorpicker')
    compile project(':pulltozoomview')
    compile project(':shapimageview')
    compile project(':MPChartLib')
    compile project(':expandablerecycleradapter')
    compile project(':boommenu')
}
